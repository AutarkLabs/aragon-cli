{"version":3,"sources":["../../src/acl/index.js"],"names":["require","getRecommendedGasLimit","module","exports","web3","gasPrice","network","getACL","repoAddr","repo","eth","Contract","abi","methods","kernel","call","daoAddr","dao","acl","aclAddr","getRoleId","CREATE_VERSION_ROLE","grant","grantee","roleId","grantPermission","estimatedGas","estimateGas","options","address","encodeABI","to","data","gas"],"mappings":";;;;;;;;;;;;eAAmCA,OAAO,CAAC,SAAD,C;IAAlCC,sB,YAAAA,sB;;AAERC,MAAM,CAACC,OAAP,GAAiB,gBAAiC;AAAA,MAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAChD,MAAMC,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAG,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,cAAAA,IADO,GACA,IAAIL,IAAI,CAACM,GAAL,CAASC,QAAb,CACXX,OAAO,CAAC,sCAAD,CAAP,CAAgDY,GADrC,EAEXJ,QAFW,CADA;AAAA;AAAA,qBAKSC,IAAI,CAACI,OAAL,CAAaC,MAAb,GAAsBC,IAAtB,EALT;;AAAA;AAKPC,cAAAA,OALO;AAMPC,cAAAA,GANO,GAMD,IAAIb,IAAI,CAACM,GAAL,CAASC,QAAb,CACVX,OAAO,CAAC,mCAAD,CAAP,CAA6CY,GADnC,EAEVI,OAFU,CANC;AAAA;AAAA,qBAUSC,GAAG,CAACJ,OAAJ,CAAYK,GAAZ,GAAkBH,IAAlB,EAVT;;AAAA;AAUPI,cAAAA,OAVO;AAAA,+CAYN,IAAIf,IAAI,CAACM,GAAL,CAASC,QAAb,CACLX,OAAO,CAAC,gCAAD,CAAP,CAA0CY,GADrC,EAELO,OAFK,CAZM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAANZ,MAAM;AAAA;AAAA;AAAA,KAAZ;;AAkBA,MAAMa,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAG,kBAAMZ,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,cAAAA,IADU,GACH,IAAIL,IAAI,CAACM,GAAL,CAASC,QAAb,CACXX,OAAO,CAAC,iCAAD,CAAP,CAA2CY,GADhC,EAEXJ,QAFW,CADG;AAAA,gDAKTC,IAAI,CAACI,OAAL,CAAaQ,mBAAb,GAAmCN,IAAnC,EALS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATK,SAAS;AAAA;AAAA;AAAA,KAAf;;AAQA,SAAO;AACLE,IAAAA,KAAK;AAAA;AAAA;AAAA,8BAAE,kBAAOd,QAAP,EAAiBe,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACahB,MAAM,CAACC,QAAD,CADnB;;AAAA;AACCU,gBAAAA,GADD;AAAA;AAAA,uBAGgBE,SAAS,CAACZ,QAAD,CAHzB;;AAAA;AAGCgB,gBAAAA,MAHD;AAKCT,gBAAAA,IALD,GAKQG,GAAG,CAACL,OAAJ,CAAYY,eAAZ,CAA4BF,OAA5B,EAAqCf,QAArC,EAA+CgB,MAA/C,CALR;AAMCE,gBAAAA,YAND,GAMgBX,IAAI,CAACY,WAAL,EANhB;AAAA,+BASCT,GAAG,CAACU,OAAJ,CAAYC,OATb;AAAA,+BAUGd,IAAI,CAACe,SAAL,EAVH;AAAA;AAAA,uBAWQ7B,sBAAsB,CAACG,IAAD,EAAOsB,YAAP,CAX9B;;AAAA;AAAA;AAAA,+BAYOpB,OAAO,CAACD,QAAR,IAAoBA,QAZ3B;AAAA;AASH0B,kBAAAA,EATG;AAUHC,kBAAAA,IAVG;AAWHC,kBAAAA,GAXG;AAYH5B,kBAAAA,QAZG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADA,GAAP;AAiBD,CA5CD","sourcesContent":["const { getRecommendedGasLimit } = require('../util')\n\nmodule.exports = ({ web3, gasPrice, network }) => {\n  const getACL = async repoAddr => {\n    const repo = new web3.eth.Contract(\n      require('@aragon/os/build/contracts/AragonApp').abi,\n      repoAddr\n    )\n    const daoAddr = await repo.methods.kernel().call()\n    const dao = new web3.eth.Contract(\n      require('@aragon/os/build/contracts/Kernel').abi,\n      daoAddr\n    )\n    const aclAddr = await dao.methods.acl().call()\n\n    return new web3.eth.Contract(\n      require('@aragon/os/build/contracts/ACL').abi,\n      aclAddr\n    )\n  }\n\n  const getRoleId = async repoAddr => {\n    const repo = new web3.eth.Contract(\n      require('@aragon/os/build/contracts/Repo').abi,\n      repoAddr\n    )\n    return repo.methods.CREATE_VERSION_ROLE().call()\n  }\n\n  return {\n    grant: async (repoAddr, grantee) => {\n      const acl = await getACL(repoAddr)\n\n      const roleId = await getRoleId(repoAddr)\n\n      const call = acl.methods.grantPermission(grantee, repoAddr, roleId)\n      const estimatedGas = call.estimateGas()\n\n      return {\n        to: acl.options.address,\n        data: call.encodeABI(),\n        gas: await getRecommendedGasLimit(web3, estimatedGas),\n        gasPrice: network.gasPrice || gasPrice,\n      }\n    },\n  }\n}\n"],"file":"index.js"}