{"version":3,"sources":["../../../src/commands/apm_cmds/grant.js"],"names":["APM","require","ACL","ensureWeb3","chalk","exports","command","describe","builder","yargs","positional","description","array","handler","reporter","gasPrice","cwd","network","module","apmOptions","apm","grantees","web3","ensRegistryAddress","acl","getRepository","appName","repo","Error","length","warning","address","info","blue","green","eth","getAccounts","accounts","from","grant","options","transaction","sendTransaction","receipt","success","transactionHash","error","red","process","exit"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,aAAD,CAAnB;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,WAAD,CAAnB;;eACuBA,OAAO,CAAC,6BAAD,C;IAAtBE,U,YAAAA,U;;AACR,IAAMC,KAAK,GAAGH,OAAO,CAAC,OAAD,CAArB;;AAEAI,OAAO,CAACC,OAAR,GAAkB,oBAAlB;AACAD,OAAO,CAACE,QAAR,GACE,oEADF;;AAGAF,OAAO,CAACG,OAAR,GAAkB,UAASC,KAAT,EAAgB;AAChC,SAAOA,KAAK,CAACC,UAAN,CAAiB,UAAjB,EAA6B;AAClCC,IAAAA,WAAW,EACT,iEAFgC;AAGlCC,IAAAA,KAAK,EAAE,IAH2B;AAIlC,eAAS;AAJyB,GAA7B,CAAP;AAMD,CAPD;;AASAP,OAAO,CAACQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAkB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEhBC,YAAAA,QAFgB,QAEhBA,QAFgB,EAGhBC,QAHgB,QAGhBA,QAHgB,EAIhBC,GAJgB,QAIhBA,GAJgB,EAKhBC,OALgB,QAKhBA,OALgB,EAMhBC,MANgB,QAMhBA,MANgB,EAOXC,UAPW,QAOhBC,GAPgB,EAShBC,QATgB,QAShBA,QATgB;AAAA;AAAA,mBAWGlB,UAAU,CAACc,OAAD,CAXb;;AAAA;AAWVK,YAAAA,IAXU;AAYhBH,YAAAA,UAAU,CAACI,kBAAX,GAAgCJ,UAAU,CAAC,cAAD,CAA1C;AAZgB;AAAA,mBAcEnB,GAAG,CAACsB,IAAD,EAAOH,UAAP,CAdL;;AAAA;AAcVC,YAAAA,GAdU;AAeVI,YAAAA,GAfU,GAeJtB,GAAG,CAAC;AAAEoB,cAAAA,IAAI,EAAJA,IAAF;AAAQL,cAAAA,OAAO,EAAPA;AAAR,aAAD,CAfC;AAAA;AAAA,mBAiBGG,GAAG,CAACK,aAAJ,CAAkBP,MAAM,CAACQ,OAAzB,WAAwC;AAAA,qBAAM,IAAN;AAAA,aAAxC,CAjBH;;AAAA;AAiBVC,YAAAA,IAjBU;;AAAA,kBAkBZA,IAAI,KAAK,IAlBG;AAAA;AAAA;AAAA;;AAAA,kBAmBR,IAAIC,KAAJ,sBACUV,MAAM,CAACQ,OADjB,sDAnBQ;;AAAA;AAwBhB,gBAAIL,QAAQ,CAACQ,MAAT,KAAoB,CAAxB,EAA2B;AACzBf,cAAAA,QAAQ,CAACgB,OAAT,CAAiB,+BAAjB;AACD;AAED;;;AA5BgB;AAAA;AAAA;AAAA;AAAA,wBA6BMT,QA7BN;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA6BLU,YAAAA,OA7BK;AA8BdjB,YAAAA,QAAQ,CAACkB,IAAT,6CACuC5B,KAAK,CAAC6B,IAAN,CACnCf,MAAM,CAACQ,OAD4B,CADvC,kBAGWtB,KAAK,CAAC8B,KAAN,CAAYH,OAAZ,CAHX,GA9Bc,CAoCd;;AApCc;AAAA,mBAqCST,IAAI,CAACa,GAAL,CAASC,WAAT,EArCT;;AAAA;AAqCRC,YAAAA,QArCQ;AAsCRC,YAAAA,IAtCQ,GAsCDD,QAAQ,CAAC,CAAD,CAtCP,EAwCd;;AAxCc;AAAA,mBAyCYb,GAAG,CAACe,KAAJ,CAAUZ,IAAI,CAACa,OAAL,CAAaT,OAAvB,EAAgCA,OAAhC,CAzCZ;;AAAA;AAyCRU,YAAAA,WAzCQ;AA2CdA,YAAAA,WAAW,CAACH,IAAZ,GAAmBA,IAAnB;AACAG,YAAAA,WAAW,CAAC1B,QAAZ,GAAuBE,OAAO,CAACF,QAAR,IAAoBA,QAA3C,CA5Cc,CA6Cd;;AA7Cc;AAAA;AAAA,mBAgDUO,IAAI,CAACa,GAAL,CAASO,eAAT,CAAyBD,WAAzB,CAhDV;;AAAA;AAgDNE,YAAAA,OAhDM;AAiDZ7B,YAAAA,QAAQ,CAAC8B,OAAT,mCAC6BxC,KAAK,CAAC6B,IAAN,CAAWU,OAAO,CAACE,eAAnB,CAD7B;AAjDY;AAAA;;AAAA;AAAA;AAAA;AAqDZ/B,YAAAA,QAAQ,CAACgC,KAAT,qCAAwB1C,KAAK,CAAC2C,GAAN,CAAU,oBAAV,CAAxB;AACAC,YAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;;AAtDY;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AA0DhBD,YAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;;AA1DgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["const APM = require('@aragon/apm')\nconst ACL = require('../../acl')\nconst { ensureWeb3 } = require('../../helpers/web3-fallback')\nconst chalk = require('chalk')\n\nexports.command = 'grant [grantees..]'\nexports.describe =\n  'Grant an address permission to create new versions in this package'\n\nexports.builder = function(yargs) {\n  return yargs.positional('grantees', {\n    description:\n      'The address being granted the permission to publish to the repo',\n    array: true,\n    default: [],\n  })\n}\n\nexports.handler = async function({\n  // Globals\n  reporter,\n  gasPrice,\n  cwd,\n  network,\n  module,\n  apm: apmOptions,\n  // Arguments\n  grantees,\n}) {\n  const web3 = await ensureWeb3(network)\n  apmOptions.ensRegistryAddress = apmOptions['ens-registry']\n\n  const apm = await APM(web3, apmOptions)\n  const acl = ACL({ web3, network })\n\n  const repo = await apm.getRepository(module.appName).catch(() => null)\n  if (repo === null) {\n    throw new Error(\n      `Repository ${module.appName} does not exist and it's registry does not exist`\n    )\n  }\n\n  if (grantees.length === 0) {\n    reporter.warning('No grantee addresses provided')\n  }\n\n  /* eslint-disable-next-line */\n  for (const address of grantees) {\n    reporter.info(\n      `Granting permission to publish on ${chalk.blue(\n        module.appName\n      )} for ${chalk.green(address)}`\n    )\n\n    // Decode sender\n    const accounts = await web3.eth.getAccounts()\n    const from = accounts[0]\n\n    // Build transaction\n    const transaction = await acl.grant(repo.options.address, address)\n\n    transaction.from = from\n    transaction.gasPrice = network.gasPrice || gasPrice\n    // the recommended gasLimit is already calculated by the ACL module\n\n    try {\n      const receipt = await web3.eth.sendTransaction(transaction)\n      reporter.success(\n        `Successful transaction (${chalk.blue(receipt.transactionHash)})`\n      )\n    } catch (e) {\n      reporter.error(`${e}\\n${chalk.red('Transaction failed')}`)\n      process.exit(1)\n    }\n  }\n\n  process.exit(0)\n}\n"],"file":"grant.js"}