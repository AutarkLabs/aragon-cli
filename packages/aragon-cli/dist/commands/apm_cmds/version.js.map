{"version":3,"sources":["../../../src/commands/apm_cmds/version.js"],"names":["fs","require","findUp","semver","exports","command","describe","builder","yargs","positional","description","type","handler","reporter","bump","cwd","manifestLocation","manifest","JSON","parse","readFileSync","environments","Error","version","valid","inc","writeFileSync","stringify","success","process","exit"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAAtB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;AAEAG,OAAO,CAACC,OAAR,GAAkB,gBAAlB;AAEAD,OAAO,CAACE,QAAR,GAAmB,2CAAnB;;AAEAF,OAAO,CAACG,OAAR,GAAkB,UAASC,KAAT,EAAgB;AAChC,SAAOA,KAAK,CAACC,UAAN,CAAiB,MAAjB,EAAyB;AAC9BC,IAAAA,WAAW,EAAE,wDADiB;AAE9BC,IAAAA,IAAI,EAAE,QAFwB;AAG9B,eAAS;AAHqB,GAAzB,CAAP;AAKD,CAND,C,CAQA;;;AACAP,OAAO,CAACQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBC,YAAAA,QAAjB,QAAiBA,QAAjB,EAA2BC,IAA3B,QAA2BA,IAA3B,EAAiCC,GAAjC,QAAiCA,GAAjC;AAAA;AAAA,mBACeb,MAAM,CAAC,YAAD,EAAe;AAAEa,cAAAA,GAAG,EAAHA;AAAF,aAAf,CADrB;;AAAA;AACVC,YAAAA,gBADU;AAGZC,YAAAA,QAHY,GAGDC,IAAI,CAACC,KAAL,CAAWnB,EAAE,CAACoB,YAAH,CAAgBJ,gBAAhB,CAAX,CAHC;;AAAA,iBAKZC,QAAQ,CAACI,YALG;AAAA;AAAA;AAAA;;AAAA,kBAMR,IAAIC,KAAJ,CACJ,gHADI,CANQ;;AAAA;AAWhBL,YAAAA,QAAQ,CAACM,OAAT,GAAmBpB,MAAM,CAACqB,KAAP,CAAaV,IAAb,IACfX,MAAM,CAACqB,KAAP,CAAaV,IAAb,CADe,GAEfX,MAAM,CAACsB,GAAP,CAAWR,QAAQ,CAACM,OAApB,EAA6BT,IAA7B,CAFJ;;AAXgB,gBAeXG,QAAQ,CAACM,OAfE;AAAA;AAAA;AAAA;;AAAA,kBAgBR,IAAID,KAAJ,CACJ,mFADI,CAhBQ;;AAAA;AAqBhBtB,YAAAA,EAAE,CAAC0B,aAAH,CAAiBV,gBAAjB,EAAmCE,IAAI,CAACS,SAAL,CAAeV,QAAf,EAAyB,IAAzB,EAA+B,CAA/B,CAAnC;AACAJ,YAAAA,QAAQ,CAACe,OAAT,wBAAiCX,QAAQ,CAACM,OAA1C;AACAM,YAAAA,OAAO,CAACC,IAAR;;AAvBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["const fs = require('fs')\nconst findUp = require('find-up')\nconst semver = require('semver')\n\nexports.command = 'version [bump]'\n\nexports.describe = '(deprecated) Bump the application version'\n\nexports.builder = function(yargs) {\n  return yargs.positional('bump', {\n    description: 'Type of bump (major, minor or patch) or version number',\n    type: 'string',\n    default: '1.0.0',\n  })\n}\n\n// TODO: Fix always default bump when network is not development\nexports.handler = async function({ reporter, bump, cwd }) {\n  const manifestLocation = await findUp('arapp.json', { cwd })\n\n  let manifest = JSON.parse(fs.readFileSync(manifestLocation))\n\n  if (manifest.environments) {\n    throw new Error(\n      'Deprecated: Your arapp.json contains an `environments` which no longer requires a `version` set in arapp.json.'\n    )\n  }\n\n  manifest.version = semver.valid(bump)\n    ? semver.valid(bump)\n    : semver.inc(manifest.version, bump)\n\n  if (!manifest.version) {\n    throw new Error(\n      'Invalid bump. Please use a version number or a valid bump (major, minor or patch)'\n    )\n  }\n\n  fs.writeFileSync(manifestLocation, JSON.stringify(manifest, null, 2))\n  reporter.success(`New version: ${manifest.version}`)\n  process.exit()\n}\n"],"file":"version.js"}