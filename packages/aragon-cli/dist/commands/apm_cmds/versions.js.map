{"version":3,"sources":["../../../src/commands/apm_cmds/versions.js"],"names":["require","ensureWeb3","APM","defaultAPMName","chalk","exports","command","describe","builder","yargs","option","description","type","handler","reporter","apmRepo","module","network","apmOptions","apm","web3","repoName","appName","ensRegistryAddress","getAllVersions","versions","info","blue","green","length","map","version","content","success","contractAddress","provider","location","error","warning","process","exit"],"mappings":";;;;;;;;;;;;;;;;eAAuBA,OAAO,CAAC,6BAAD,C;IAAtBC,U,YAAAA,U;;AACR,IAAMC,GAAG,GAAGF,OAAO,CAAC,aAAD,CAAnB;;AACA,IAAMG,cAAc,GAAGH,OAAO,CAAC,2CAAD,CAA9B;;AACA,IAAMI,KAAK,GAAGJ,OAAO,CAAC,OAAD,CAArB;;AAEAK,OAAO,CAACC,OAAR,GAAkB,oBAAlB;AAEAD,OAAO,CAACE,QAAR,GACE,mEADF;;AAGAF,OAAO,CAACG,OAAR,GAAkB,UAASC,KAAT,EAAgB;AAChC,SAAOA,KAAK,CAACC,MAAN,CAAa,SAAb,EAAwB;AAC7BC,IAAAA,WAAW,EAAE,4BADgB;AAE7BC,IAAAA,IAAI,EAAE,QAFuB;AAG7B,eAAS;AAHoB,GAAxB,CAAP;AAKD,CAND;;AAQAP,OAAO,CAACQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,YAAAA,QADgB,QAChBA,QADgB,EAEhBC,OAFgB,QAEhBA,OAFgB,EAGhBC,MAHgB,QAGhBA,MAHgB,EAIhBC,OAJgB,QAIhBA,OAJgB,EAKXC,UALW,QAKhBC,GALgB;AAAA;AAAA,mBAOGlB,UAAU,CAACgB,OAAD,CAPb;;AAAA;AAOVG,YAAAA,IAPU;AAQVC,YAAAA,QARU,GAQCN,OAAO,GAAGZ,cAAc,CAACY,OAAD,CAAjB,GAA6BC,MAAM,CAACM,OAR5C;AAShBJ,YAAAA,UAAU,CAACK,kBAAX,GAAgCL,UAAU,CAAC,cAAD,CAA1C;AATgB;AAAA,mBAWOhB,GAAG,CAACkB,IAAD,EAAOF,UAAP,CAAH,CAAsBM,cAAtB,CAAqCH,QAArC,CAXP;;AAAA;AAWVI,YAAAA,QAXU;AAahBX,YAAAA,QAAQ,CAACY,IAAT,WACKtB,KAAK,CAACuB,IAAN,CAAWN,QAAX,CADL,kBACiCjB,KAAK,CAACwB,KAAN,CAC7BH,QAAQ,CAACI,MADoB,CADjC;AAMAJ,YAAAA,QAAQ,CAACK,GAAT,CAAa,UAAAC,OAAO,EAAI;AACtB,kBAAIA,OAAO,IAAIA,OAAO,CAACC,OAAvB,EAAgC;AAC9BlB,gBAAAA,QAAQ,CAACmB,OAAT,WACK7B,KAAK,CAACuB,IAAN,CAAWI,OAAO,CAACA,OAAnB,CADL,eACqCA,OAAO,CAACG,eAD7C,cAEIH,OAAO,CAACC,OAAR,CAAgBG,QAFpB,cAGMJ,OAAO,CAACC,OAAR,CAAgBI,QAHtB;AAKD,eAND,MAMO,IAAIL,OAAO,IAAIA,OAAO,CAACM,KAAvB,EAA8B;AACnCvB,gBAAAA,QAAQ,CAACwB,OAAT,WACKlC,KAAK,CAACuB,IAAN,CAAWI,OAAO,CAACA,OAAnB,CADL,eACqCA,OAAO,CAACG,eAD7C,cAEIH,OAAO,CAACM,KAFZ;AAKD,eANM,MAMA;AACLvB,gBAAAA,QAAQ,CAACuB,KAAT,WACKjC,KAAK,CAACuB,IAAN,CAAWI,OAAO,CAACA,OAAnB,CADL,eAEIA,OAAO,CAACG,eAFZ;AAKD;AACF,aApBD;AAqBAK,YAAAA,OAAO,CAACC,IAAR;;AAxCgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["const { ensureWeb3 } = require('../../helpers/web3-fallback')\nconst APM = require('@aragon/apm')\nconst defaultAPMName = require('@aragon/cli-utils/src/helpers/default-apm')\nconst chalk = require('chalk')\n\nexports.command = 'versions [apmRepo]'\n\nexports.describe =\n  'Shows all the previously published versions of a given repository'\n\nexports.builder = function(yargs) {\n  return yargs.option('apmRepo', {\n    description: 'Name of the APM repository',\n    type: 'string',\n    default: null,\n  })\n}\n\nexports.handler = async function({\n  reporter,\n  apmRepo,\n  module,\n  network,\n  apm: apmOptions,\n}) {\n  const web3 = await ensureWeb3(network)\n  const repoName = apmRepo ? defaultAPMName(apmRepo) : module.appName\n  apmOptions.ensRegistryAddress = apmOptions['ens-registry']\n\n  const versions = await APM(web3, apmOptions).getAllVersions(repoName)\n\n  reporter.info(\n    `${chalk.blue(repoName)} has ${chalk.green(\n      versions.length\n    )} published versions`\n  )\n\n  versions.map(version => {\n    if (version && version.content) {\n      reporter.success(\n        `${chalk.blue(version.version)}: ${version.contractAddress} ${\n          version.content.provider\n        }:${version.content.location}`\n      )\n    } else if (version && version.error) {\n      reporter.warning(\n        `${chalk.blue(version.version)}: ${version.contractAddress} ${\n          version.error\n        }`\n      )\n    } else {\n      reporter.error(\n        `${chalk.blue(version.version)}: ${\n          version.contractAddress\n        } Version not found in provider`\n      )\n    }\n  })\n  process.exit()\n}\n"],"file":"versions.js"}