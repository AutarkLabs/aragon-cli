{"version":3,"sources":["../../../../src/commands/dao_cmds/acl_cmds/view.js"],"names":["chalk","require","TaskList","daoArg","listApps","rolesForApps","ensureWeb3","listrOpts","Table","knownRoles","ANY_ENTITY","ANY_ENTITY_TEXT","NO_MANAGER","ZERO_ADDRESS","NO_MANAGER_TEXT","knownApps","exports","command","describe","builder","yargs","printAppName","appId","addr","split","slice","appFromProxyAddress","proxyAddress","apps","filter","app","formatRow","to","role","allowedEntities","manager","length","formattedTo","formattedRole","formattedAllowed","reduce","acc","allowedName","allowedEmoji","formattedManager","managerName","managerEmoji","handler","reporter","dao","network","apm","wsProvider","module","silent","debug","appName","web3","tasks","title","task","ctx","output","Promise","resolve","reject","resolveIfReady","acl","provider","currentProvider","onPermissions","permissions","onApps","onDaoAddress","daoAddress","onError","err","error","process","exit","run","then","success","green","table","head","map","x","white","tos","Object","keys","flattenedACL","roles","concat","row","forEach","push","console","log","toString"],"mappings":"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","sourcesContent":["import initAragonJS from '../utils/aragonjs-wrapper'\nconst chalk = require('chalk')\nconst TaskList = require('listr')\nconst daoArg = require('../utils/daoArg')\nconst { listApps } = require('../utils/knownApps')\nconst { rolesForApps } = require('./utils/knownRoles')\nconst { ensureWeb3 } = require('../../../helpers/web3-fallback')\nconst listrOpts = require('@aragon/cli-utils/src/helpers/listr-options')\n\nconst Table = require('cli-table')\n\nconst knownRoles = rolesForApps()\nconst ANY_ENTITY = '0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF'\nconst ANY_ENTITY_TEXT = 'Any entity'\nconst { NO_MANAGER, ZERO_ADDRESS } = require('../../../util')\nconst NO_MANAGER_TEXT = 'No Manager'\n\nlet knownApps\n\nexports.command = 'view <dao>'\n\nexports.describe = 'Inspect permissions in a DAO'\n\nexports.builder = function(yargs) {\n  return daoArg(yargs)\n}\n\nconst printAppName = (appId, addr) => {\n  if (addr === ANY_ENTITY) return ANY_ENTITY_TEXT\n  if (addr === NO_MANAGER) return NO_MANAGER_TEXT\n  return knownApps[appId]\n    ? `${knownApps[appId].split('.')[0]} (${addr.slice(0, 6)})`\n    : addr.slice(0, 16) + '...'\n}\n\nconst appFromProxyAddress = (proxyAddress, apps) => {\n  return apps.filter(app => app.proxyAddress === proxyAddress)[0] || {}\n}\n\nconst formatRow = ({ to, role, allowedEntities, manager }, apps) => {\n  if (\n    manager === ZERO_ADDRESS ||\n    !allowedEntities ||\n    allowedEntities.length === 0\n  ) {\n    return null\n  }\n\n  const formattedTo = printAppName(appFromProxyAddress(to, apps).appId, to)\n  let formattedRole =\n    knownRoles[role] || `${role.slice(0, 8)}..${role.slice(-6)}`\n  if (formattedRole['id']) formattedRole = formattedRole['id']\n  const formattedAllowed = allowedEntities\n    .reduce((acc, addr) => {\n      const allowedName = printAppName(\n        appFromProxyAddress(addr, apps).appId,\n        addr\n      )\n      const allowedEmoji = allowedName === ANY_ENTITY_TEXT ? 'ðŸ†“' : 'âœ…'\n      return acc + '\\n' + allowedEmoji + '  ' + allowedName\n    }, '')\n    .slice(1) // remove first newline\n  const formattedManager = (() => {\n    const managerName = printAppName(\n      appFromProxyAddress(manager, apps).appId,\n      manager\n    )\n    const managerEmoji = managerName === NO_MANAGER_TEXT ? 'ðŸ†“' : ''\n    return managerEmoji + '  ' + managerName\n  })()\n\n  return [formattedTo, formattedRole, formattedAllowed, formattedManager]\n}\n\nexports.handler = async function({\n  reporter,\n  dao,\n  network,\n  apm,\n  wsProvider,\n  module,\n  silent,\n  debug,\n}) {\n  knownApps = listApps(module ? [module.appName] : [])\n  const web3 = await ensureWeb3(network)\n\n  const tasks = new TaskList(\n    [\n      {\n        title: 'Inspecting DAO Permissions',\n        task: (ctx, task) => {\n          task.output = `Fetching permissions for ${dao}...`\n\n          return new Promise((resolve, reject) => {\n            const resolveIfReady = () => {\n              if (ctx.acl && ctx.apps) {\n                resolve()\n              }\n            }\n\n            initAragonJS(dao, apm['ens-registry'], {\n              provider: wsProvider || web3.currentProvider,\n              onPermissions: permissions => {\n                ctx.acl = permissions\n                resolveIfReady()\n              },\n              onApps: apps => {\n                ctx.apps = apps\n                resolveIfReady()\n              },\n              onDaoAddress: addr => {\n                ctx.daoAddress = addr\n              },\n              onError: err => reject(err),\n            }).catch(err => {\n              reporter.error('Error inspecting DAO')\n              reporter.debug(err)\n              process.exit(1)\n            })\n          })\n        },\n      },\n    ],\n    listrOpts(silent, debug)\n  )\n\n  return tasks.run().then(ctx => {\n    reporter.success(\n      `Successfully fetched DAO apps for ${chalk.green(ctx.daoAddress)}`\n    )\n\n    let acl = ctx.acl\n\n    // filter according to cli params will happen here\n\n    const table = new Table({\n      head: ['App', 'Action', 'Allowed entities', 'Manager'].map(x =>\n        chalk.white(x)\n      ),\n    })\n\n    const tos = Object.keys(acl)\n\n    const flattenedACL = tos.reduce((acc, to) => {\n      const roles = Object.keys(acl[to])\n      const permissions = roles.map(role => ({ to, role, ...acl[to][role] }))\n\n      return acc.concat(permissions)\n    }, [])\n\n    flattenedACL\n      .map(row => formatRow(row, ctx.apps))\n      .filter(row => row)\n      .forEach(row => table.push(row))\n\n    console.log(table.toString())\n    process.exit() // force exit, as aragonjs hangs\n  })\n}\n"],"file":"view.js"}