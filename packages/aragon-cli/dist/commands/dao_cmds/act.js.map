{"version":3,"sources":["../../../src/commands/dao_cmds/act.js"],"names":["ABI","require","execHandler","handler","getAppKernel","ensureWeb3","parseArgumentStringIfPossible","ZERO_ADDRESS","EXECUTE_FUNCTION_NAME","exports","command","describe","builder","yargs","positional","description","type","option","array","encodeCalldata","signature","params","sigBytes","encodeFunctionSignature","types","replace","split","paramBytes","encodeParameters","slice","reporter","apm","network","agentAddress","target","callArgs","ethValue","wsProvider","global","DEBUG_MODE","console","log","map","web3","dao","Error","weiAmount","utils","toWei","fnArgs","getTransactionPath","wrapper","ipfsCheck"],"mappings":"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","sourcesContent":["const ABI = require('web3-eth-abi')\nconst execHandler = require('./utils/execHandler').handler\nconst getAppKernel = require('./utils/app-kernel')\nconst { ensureWeb3 } = require('../../helpers/web3-fallback')\nconst { parseArgumentStringIfPossible, ZERO_ADDRESS } = require('../../util')\n\nconst EXECUTE_FUNCTION_NAME = 'execute'\n\nexports.command = 'act <agent-address> <target> <signature> [call-args..]'\n\nexports.describe = 'Executes an action from the Agent app'\n\nexports.builder = function(yargs) {\n  return yargs\n    .positional('agent-address', {\n      description: 'Address of the Agent app proxy',\n      type: 'string',\n    })\n    .positional('target', {\n      description: 'Address where the action is being executed',\n      type: 'string',\n    })\n    .positional('signature', {\n      description:\n        'Signature of the function to be executed (e.g. \"myMethod(uint256,string)\"',\n      type: 'string',\n    })\n    .option('call-args', {\n      description: 'Arguments to be passed to the function',\n      array: true,\n      default: [],\n    })\n    .option('eth-value', {\n      description:\n        'Amount of ETH from the contract that is sent with the action',\n      default: '0',\n    })\n}\n\nconst encodeCalldata = (signature, params) => {\n  const sigBytes = ABI.encodeFunctionSignature(signature)\n\n  const types = signature.replace(')', '').split('(')[1]\n\n  // No params, return signature directly\n  if (types === '') {\n    return sigBytes\n  }\n\n  const paramBytes = ABI.encodeParameters(types.split(','), params)\n\n  return `${sigBytes}${paramBytes.slice(2)}`\n}\n\nexports.handler = async function({\n  reporter,\n  apm,\n  network,\n  agentAddress,\n  target,\n  signature,\n  callArgs,\n  ethValue,\n  wsProvider,\n}) {\n  // TODO (daniel) refactor ConsoleReporter so we can do reporter.debug instead\n  if (global.DEBUG_MODE) console.log('call-args before parsing', callArgs)\n  callArgs = callArgs.map(parseArgumentStringIfPossible)\n  if (global.DEBUG_MODE) console.log('call-args after parsing', callArgs)\n\n  const web3 = await ensureWeb3(network)\n  const dao = await getAppKernel(web3, agentAddress)\n\n  if (dao === ZERO_ADDRESS) {\n    throw new Error(\n      'Invalid Agent app address, cannot find Kernel reference in contract'\n    )\n  }\n\n  const weiAmount = web3.utils.toWei(ethValue)\n\n  const fnArgs = [target, weiAmount, encodeCalldata(signature, callArgs)]\n\n  const getTransactionPath = wrapper =>\n    wrapper.getTransactionPath(agentAddress, EXECUTE_FUNCTION_NAME, fnArgs)\n\n  return execHandler(dao, getTransactionPath, {\n    ipfsCheck: true,\n    reporter,\n    apm,\n    network,\n    wsProvider,\n  })\n}\n"],"file":"act.js"}