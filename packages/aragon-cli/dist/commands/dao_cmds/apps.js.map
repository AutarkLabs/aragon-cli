{"version":3,"sources":["../../../src/commands/dao_cmds/apps.js"],"names":["TaskList","require","chalk","daoArg","listApps","ensureWeb3","listrOpts","getContract","Table","addressesEqual","a","b","toLowerCase","knownApps","exports","command","describe","builder","yargs","option","description","printAppNameFromAppId","appId","blue","printAppNameAndVersion","appName","version","printContent","content","provider","location","handler","reporter","dao","all","network","apmOptions","apm","wsProvider","module","silent","debug","web3","tasks","title","task","ctx","output","Promise","resolve","reject","currentProvider","onApps","apps","onDaoAddress","addr","daoAddress","onError","err","error","process","exit","enabled","kernel","eth","Contract","abi","methods","getInitializationBlock","call","fromBlock","toBlock","getPastEvents","events","appsWithoutPermissions","map","event","proxyAddress","returnValues","proxy","filter","find","app","run","then","success","green","appsContent","codeAddress","row","replace","table","head","x","white","forEach","push","console","log","toString","tableForPermissionlessApps"],"mappings":"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","sourcesContent":["import initAragonJS from './utils/aragonjs-wrapper'\nconst TaskList = require('listr')\nconst chalk = require('chalk')\nconst daoArg = require('./utils/daoArg')\nconst { listApps } = require('./utils/knownApps')\nconst { ensureWeb3 } = require('../../helpers/web3-fallback')\nconst listrOpts = require('@aragon/cli-utils/src/helpers/listr-options')\nconst { getContract } = require('../../util')\nconst Table = require('cli-table')\n\nconst addressesEqual = (a, b) => a.toLowerCase() === b.toLowerCase()\n\nlet knownApps\n\nexports.command = 'apps <dao>'\n\nexports.describe = 'Get all the apps in a DAO'\n\nexports.builder = function(yargs) {\n  return daoArg(yargs).option('all', {\n    description: 'Whether to include apps without permissions as well',\n    boolean: true,\n  })\n}\n\nconst printAppNameFromAppId = appId => {\n  return knownApps[appId] ? chalk.blue(knownApps[appId]) : appId\n}\n\nconst printAppNameAndVersion = (appName, version) => {\n  return version ? chalk.blue(`${appName}@v${version}`) : chalk.blue(appName)\n}\n\nconst printContent = content => {\n  if (!content) {\n    return '(No UI available)'\n  }\n\n  return `${content.provider}:${content.location}`\n}\n\nexports.handler = async function({\n  reporter,\n  dao,\n  all,\n  network,\n  apm: apmOptions,\n  wsProvider,\n  module,\n  silent,\n  debug,\n}) {\n  knownApps = listApps(module ? [module.appName] : [])\n  const web3 = await ensureWeb3(network)\n\n  const tasks = new TaskList(\n    [\n      {\n        title: 'Inspecting DAO',\n        task: (ctx, task) => {\n          task.output = `Fetching apps for ${dao}...`\n\n          return new Promise((resolve, reject) => {\n            initAragonJS(dao, apmOptions['ens-registry'], {\n              provider: wsProvider || web3.currentProvider,\n              onApps: apps => {\n                ctx.apps = apps\n                resolve()\n              },\n              onDaoAddress: addr => {\n                ctx.daoAddress = addr\n              },\n              onError: err => reject(err),\n            }).catch(err => {\n              reporter.error('Error inspecting DAO apps')\n              reporter.debug(err)\n              process.exit(1)\n            })\n          })\n        },\n      },\n      {\n        title: 'Fetching permissionless apps',\n        enabled: () => all,\n        task: async (ctx, task) => {\n          const kernel = new web3.eth.Contract(\n            getContract('@aragon/os', 'Kernel').abi,\n            ctx.daoAddress\n          )\n\n          const events = await kernel.getPastEvents('NewAppProxy', {\n            fromBlock: await kernel.methods.getInitializationBlock().call(),\n            toBlock: 'latest',\n          })\n\n          ctx.appsWithoutPermissions = events\n            .map(event => ({\n              proxyAddress: event.returnValues.proxy,\n              appId: event.returnValues.appId,\n            }))\n            // Remove apps that have permissions\n            .filter(\n              ({ proxyAddress }) =>\n                !ctx.apps.find(app =>\n                  addressesEqual(app.proxyAddress, proxyAddress)\n                )\n            )\n        },\n      },\n    ],\n    listrOpts(silent, debug)\n  )\n\n  return tasks.run().then(ctx => {\n    reporter.success(\n      `Successfully fetched DAO apps for ${chalk.green(ctx.daoAddress)}`\n    )\n    const appsContent = ctx.apps\n      .map(\n        ({ appId, proxyAddress, codeAddress, content, appName, version }) => [\n          appName\n            ? printAppNameAndVersion(appName, version)\n            : printAppNameFromAppId(appId),\n          proxyAddress,\n          printContent(content),\n        ]\n      )\n      // filter registry name to make it shorter\n      // TODO: Add flag to turn off\n      .map(row => {\n        row[0] = row[0].replace('.aragonpm.eth', '')\n        return row\n      })\n\n    const table = new Table({\n      head: ['App', 'Proxy address', 'Content'].map(x => chalk.white(x)),\n    })\n    appsContent.forEach(row => table.push(row))\n    console.log(table.toString())\n\n    // Print permisionless apps\n    if (ctx.appsWithoutPermissions) {\n      const tableForPermissionlessApps = new Table({\n        head: ['Permissionless app', 'Proxy address'].map(x => chalk.white(x)),\n      })\n      ctx.appsWithoutPermissions.forEach(app =>\n        tableForPermissionlessApps.push([\n          printAppNameFromAppId(app.appId).replace('.aragonpm.eth', ''),\n          app.proxyAddress,\n        ])\n      )\n      console.log(tableForPermissionlessApps.toString())\n    }\n\n    process.exit() // force exit, as aragonjs hangs\n  })\n}\n"],"file":"apps.js"}