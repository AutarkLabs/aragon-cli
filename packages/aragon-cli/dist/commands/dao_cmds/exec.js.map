{"version":3,"sources":["../../../src/commands/dao_cmds/exec.js"],"names":["execHandler","require","handler","daoArg","parseArgumentStringIfPossible","exports","command","describe","builder","yargs","positional","description","option","array","reporter","dao","apm","network","proxyAddress","fn","fnArgs","wsProvider","global","DEBUG_MODE","console","log","map","getTransactionPath","wrapper","ipfsCheck"],"mappings":";;;;;;;;;;;;;;AAAA,IAAMA,WAAW,GAAGC,OAAO,CAAC,qBAAD,CAAP,CAA+BC,OAAnD;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAAC,gBAAD,CAAtB;;eAC0CA,OAAO,CAAC,YAAD,C;IAAzCG,6B,YAAAA,6B;;AAERC,OAAO,CAACC,OAAR,GAAkB,6CAAlB;AAEAD,OAAO,CAACE,QAAR,GAAmB,oCAAnB;;AAEAF,OAAO,CAACG,OAAR,GAAkB,UAASC,KAAT,EAAgB;AAChC,SAAON,MAAM,CAACM,KAAD,CAAN,CACJC,UADI,CACO,eADP,EACwB;AAC3BC,IAAAA,WAAW,EAAE;AADc,GADxB,EAIJD,UAJI,CAIO,IAJP,EAIa;AAChBC,IAAAA,WAAW,EAAE;AADG,GAJb,EAOJC,MAPI,CAOG,SAPH,EAOc;AACjBD,IAAAA,WAAW,EAAE,wCADI;AAEjBE,IAAAA,KAAK,EAAE,IAFU;AAGjB,eAAS;AAHQ,GAPd,CAAP;AAYD,CAbD;;AAeAR,OAAO,CAACH,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBY,YAAAA,QADgB,QAChBA,QADgB,EAEhBC,GAFgB,QAEhBA,GAFgB,EAGhBC,GAHgB,QAGhBA,GAHgB,EAIhBC,OAJgB,QAIhBA,OAJgB,EAKhBC,YALgB,QAKhBA,YALgB,EAMhBC,EANgB,QAMhBA,EANgB,EAOhBC,MAPgB,QAOhBA,MAPgB,EAQhBC,UARgB,QAQhBA,UARgB;AAUhB;AACA,gBAAIC,MAAM,CAACC,UAAX,EAAuBC,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCL,MAAtC;AACvBA,YAAAA,MAAM,GAAGA,MAAM,CAACM,GAAP,CAAWtB,6BAAX,CAAT;AACA,gBAAIkB,MAAM,CAACC,UAAX,EAAuBC,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCL,MAArC;;AAEjBO,YAAAA,kBAfU,GAeW,SAArBA,kBAAqB,CAAAC,OAAO;AAAA,qBAChCA,OAAO,CAACD,kBAAR,CAA2BT,YAA3B,EAAyCC,EAAzC,EAA6CC,MAA7C,CADgC;AAAA,aAflB;;AAAA,6CAiBTpB,WAAW,CAACe,GAAD,EAAMY,kBAAN,EAA0B;AAC1CE,cAAAA,SAAS,EAAE,IAD+B;AAE1Cf,cAAAA,QAAQ,EAARA,QAF0C;AAG1CE,cAAAA,GAAG,EAAHA,GAH0C;AAI1CC,cAAAA,OAAO,EAAPA,OAJ0C;AAK1CI,cAAAA,UAAU,EAAVA;AAL0C,aAA1B,CAjBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["const execHandler = require('./utils/execHandler').handler\nconst daoArg = require('./utils/daoArg')\nconst { parseArgumentStringIfPossible } = require('../../util')\n\nexports.command = 'exec <dao> <proxy-address> <fn> [fn-args..]'\n\nexports.describe = 'Executes a call in an app of a DAO'\n\nexports.builder = function(yargs) {\n  return daoArg(yargs)\n    .positional('proxy-address', {\n      description: 'Proxy address of the app with the function to be run',\n    })\n    .positional('fn', {\n      description: 'Function to be executed',\n    })\n    .option('fn-args', {\n      description: 'Arguments to be passed to the function',\n      array: true,\n      default: [],\n    })\n}\n\nexports.handler = async function({\n  reporter,\n  dao,\n  apm,\n  network,\n  proxyAddress,\n  fn,\n  fnArgs,\n  wsProvider,\n}) {\n  // TODO (daniel) refactor ConsoleReporter so we can do reporter.debug instead\n  if (global.DEBUG_MODE) console.log('fn-args before parsing', fnArgs)\n  fnArgs = fnArgs.map(parseArgumentStringIfPossible)\n  if (global.DEBUG_MODE) console.log('fn-args after parsing', fnArgs)\n\n  const getTransactionPath = wrapper =>\n    wrapper.getTransactionPath(proxyAddress, fn, fnArgs)\n  return execHandler(dao, getTransactionPath, {\n    ipfsCheck: true,\n    reporter,\n    apm,\n    network,\n    wsProvider,\n  })\n}\n"],"file":"exec.js"}