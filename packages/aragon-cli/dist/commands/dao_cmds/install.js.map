{"version":3,"sources":["../../../src/commands/dao_cmds/install.js"],"names":["execTask","require","task","resolveEnsDomain","TaskList","daoArg","ensureWeb3","APM","defaultAPMName","chalk","startIPFS","getRepoTask","encodeInitPayload","getContract","ANY_ENTITY","NO_MANAGER","ZERO_ADDRESS","kernelABI","abi","listrOpts","addressesEqual","a","b","toLowerCase","exports","command","describe","builder","yargs","args","option","description","array","options","choices","wsProvider","web3","reporter","dao","gasPrice","network","apmOptions","apmRepo","apmRepoVersion","appInit","appInitArgs","setPermissions","silent","debug","ensRegistryAddress","apm","test","provider","currentProvider","registryAddress","kernel","eth","Contract","tasks","title","bold","ctx","methods","APP_BASES_NAMESPACE","call","basesNamespace","getApp","repo","appId","currentBase","skip","contractAddress","Error","initPayload","notInitialized","getTransactionPath","wrapper","fnArgs","ipfsCheck","logABI","find","type","name","logSignature","inputs","map","i","join","logTopic","utils","sha3","deployLog","receipt","logs","topics","address","log","decodeLog","data","appAddress","proxy","enabled","roles","length","permissions","role","bytes","accounts","getAccounts","Promise","all","params","getACLTransactionPath","then","run","handler","info","blue","transactionPath","success","green","warning","process","exit"],"mappings":"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","sourcesContent":["const execTask = require('./utils/execHandler').task\nconst { resolveEnsDomain } = require('./utils/aragonjs-wrapper')\nconst TaskList = require('listr')\nconst daoArg = require('./utils/daoArg')\nconst { ensureWeb3 } = require('../../helpers/web3-fallback')\nconst APM = require('@aragon/apm')\nconst defaultAPMName = require('@aragon/cli-utils/src/helpers/default-apm')\nconst chalk = require('chalk')\nconst startIPFS = require('../ipfs_cmds/start')\nconst getRepoTask = require('./utils/getRepoTask')\nconst encodeInitPayload = require('./utils/encodeInitPayload')\nconst {\n  getContract,\n  ANY_ENTITY,\n  NO_MANAGER,\n  ZERO_ADDRESS,\n} = require('../../util')\nconst kernelABI = require('@aragon/os/abi/Kernel').abi\nconst listrOpts = require('@aragon/cli-utils/src/helpers/listr-options')\n\nconst addressesEqual = (a, b) => a.toLowerCase() === b.toLowerCase()\n\nexports.command = 'install <dao> <apmRepo> [apmRepoVersion]'\n\nexports.describe = 'Install an app into a DAO'\n\nexports.builder = function(yargs) {\n  return getRepoTask\n    .args(daoArg(yargs))\n    .option('app-init', {\n      description:\n        'Name of the function that will be called to initialize an app. Set it to \"none\" to skip initialization',\n      default: 'initialize',\n    })\n    .option('app-init-args', {\n      description: 'Arguments for calling the app init function',\n      array: true,\n      default: [],\n    })\n    .options('set-permissions', {\n      description:\n        'Whether to set permissions in the app. Set it to \"open\" to allow ANY_ENTITY on all roles.',\n      choices: ['open'],\n    })\n}\n\nexports.task = async ({\n  wsProvider,\n  web3,\n  reporter,\n  dao,\n  gasPrice,\n  network,\n  apmOptions,\n  apmRepo,\n  apmRepoVersion,\n  appInit,\n  appInitArgs,\n  setPermissions,\n  silent,\n  debug,\n}) => {\n  apmOptions.ensRegistryAddress = apmOptions['ens-registry']\n  const apm = await APM(web3, apmOptions)\n\n  apmRepo = defaultAPMName(apmRepo)\n\n  dao = /0x[a-fA-F0-9]{40}/.test(dao)\n    ? dao\n    : await resolveEnsDomain(dao, {\n        provider: web3.currentProvider,\n        registryAddress: apmOptions.ensRegistryAddress,\n      })\n\n  const kernel = new web3.eth.Contract(\n    getContract('@aragon/os', 'Kernel').abi,\n    dao\n  )\n\n  const tasks = new TaskList(\n    [\n      {\n        // IPFS is a dependency of getRepoTask which uses IPFS to fetch the contract ABI\n        title: 'Check IPFS',\n        task: () => startIPFS.task({ apmOptions }),\n      },\n      {\n        title: `Fetching ${chalk.bold(apmRepo)}@${apmRepoVersion}`,\n        task: getRepoTask.task({ apm, apmRepo, apmRepoVersion }),\n      },\n      {\n        title: `Checking installed version`,\n        task: async (ctx, task) => {\n          const basesNamespace = await kernel.methods\n            .APP_BASES_NAMESPACE()\n            .call()\n          const currentBase = await kernel.methods\n            .getApp(basesNamespace, ctx.repo.appId)\n            .call()\n          if (currentBase === ZERO_ADDRESS) {\n            task.skip(`Installing the first instance of ${apmRepo} in DAO`)\n            return\n          }\n          if (!addressesEqual(currentBase, ctx.repo.contractAddress)) {\n            throw new Error(\n              `Cannot install app on a different version. Currently installed version for ${apmRepo} in the DAO is ${currentBase}\\n Please upgrade using 'dao upgrade' first or install a different version.`\n            )\n          }\n        },\n      },\n      {\n        title: 'Deploying app instance',\n        task: async ctx => {\n          const initPayload = encodeInitPayload(\n            web3,\n            ctx.repo.abi,\n            appInit,\n            appInitArgs\n          )\n\n          if (initPayload === '0x') {\n            ctx.notInitialized = true\n          }\n\n          const getTransactionPath = wrapper => {\n            const fnArgs = [\n              ctx.repo.appId,\n              ctx.repo.contractAddress,\n              initPayload,\n              false,\n            ]\n            return wrapper.getTransactionPath(dao, 'newAppInstance', fnArgs)\n          }\n\n          return execTask(dao, getTransactionPath, {\n            ipfsCheck: false,\n            reporter,\n            gasPrice,\n            apm: apmOptions,\n            web3,\n            wsProvider,\n            silent,\n            debug,\n          })\n        },\n      },\n      {\n        title: 'Fetching deployed app',\n        task: async (ctx, task) => {\n          const logABI = kernelABI.find(\n            ({ type, name }) => type === 'event' && name === 'NewAppProxy'\n          )\n          if (!logABI) {\n            throw new Error(\n              'Kernel ABI in aragon.js doesnt contain NewAppProxy log'\n            )\n          }\n          const logSignature = `${logABI.name}(${logABI.inputs\n            .map(i => i.type)\n            .join(',')})`\n          const logTopic = web3.utils.sha3(logSignature)\n          const deployLog = ctx.receipt.logs.find(({ topics, address }) => {\n            return topics[0] === logTopic && addressesEqual(dao, address)\n          })\n\n          if (!deployLog) {\n            task.skip(\"App wasn't deployed in transaction.\")\n            return\n          }\n\n          const log = web3.eth.abi.decodeLog(logABI.inputs, deployLog.data)\n          ctx.appAddress = log.proxy\n        },\n      },\n      {\n        title: 'Set permissions',\n        enabled: ctx => setPermissions === 'open' && ctx.appAddress,\n        task: async (ctx, task) => {\n          if (!ctx.repo.roles || ctx.repo.roles.length === 0) {\n            throw new Error(\n              'You have no roles defined in your arapp.json.\\nThis is required for your app to be properly installed.\\nSee https://hack.aragon.org/docs/cli-global-confg#the-arappjson-file for more information.'\n            )\n          }\n\n          const permissions = ctx.repo.roles.map(role => [\n            ANY_ENTITY,\n            ctx.appAddress,\n            role.bytes,\n            NO_MANAGER,\n          ])\n\n          if (!ctx.accounts) {\n            ctx.accounts = await web3.eth.getAccounts()\n          }\n\n          return Promise.all(\n            permissions.map(params => {\n              const getTransactionPath = async wrapper => {\n                return wrapper.getACLTransactionPath('createPermission', params)\n              }\n\n              return (\n                execTask(dao, getTransactionPath, {\n                  reporter,\n                  gasPrice,\n                  apm: apmOptions,\n                  web3,\n                  wsProvider,\n                  silent,\n                  debug,\n                })\n                  // execTask returns a TaskList not a promise\n                  .then(tasks => tasks.run())\n              )\n            })\n          )\n        },\n      },\n    ],\n    listrOpts(silent, debug)\n  )\n\n  return tasks\n}\n\nexports.handler = async function({\n  reporter,\n  dao,\n  gasPrice,\n  network,\n  apm: apmOptions,\n  apmRepo,\n  apmRepoVersion,\n  appInit,\n  appInitArgs,\n  setPermissions,\n  wsProvider,\n  silent,\n  debug,\n}) {\n  const web3 = await ensureWeb3(network)\n  const task = await exports.task({\n    web3,\n    reporter,\n    dao,\n    gasPrice,\n    network,\n    apmOptions,\n    apmRepo,\n    apmRepoVersion,\n    appInit,\n    appInitArgs,\n    setPermissions,\n    wsProvider,\n    silent,\n    debug,\n  })\n\n  return task.run().then(ctx => {\n    reporter.info(\n      `Successfully executed: \"${chalk.blue(\n        ctx.transactionPath[0].description\n      )}\"`\n    )\n\n    if (ctx.appAddress) {\n      reporter.success(\n        `Installed ${chalk.blue(apmRepo)} at: ${chalk.green(ctx.appAddress)}`\n      )\n    } else {\n      reporter.warning(\n        'After the app instance is created, you will need to assign permissions to it for it appear as an app in the DAO'\n      )\n    }\n\n    if (ctx.notInitialized) {\n      reporter.warning(\n        'App could not be initialized, check the --app-init flag. Functions protected behind the ACL will not work until the app is initialized'\n      )\n    }\n\n    process.exit()\n  })\n}\n"],"file":"install.js"}