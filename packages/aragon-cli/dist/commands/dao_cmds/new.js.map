{"version":3,"sources":["../../../src/commands/dao_cmds/new.js"],"names":["TaskList","require","ensureWeb3","APM","defaultAPMName","green","bold","getContract","getRepoTask","listrOpts","startIPFS","getRecommendedGasLimit","assignIdTask","task","exports","BARE_TEMPLATE","BARE_INSTANCE_FUNCTION","BARE_TEMPLATE_DEPLOY_EVENT","OLD_BARE_TEMPLATE","OLD_BARE_INSTANCE_FUNCTION","OLD_BARE_TEMPLATE_DEPLOY_EVENT","BARE_TEMPLATE_ABI","OLD_BARE_TEMPLATE_ABI","command","describe","builder","yargs","positional","description","option","array","type","web3","reporter","gasPrice","apmOptions","template","templateVersion","fn","fnArgs","skipChecks","deployEvent","templateInstance","silent","debug","ipfsCheck","aragonId","ensRegistryAddress","apm","bareTemplateABI","tasks","title","enabled","apmRepo","apmRepoVersion","artifactRequired","ctx","accounts","eth","getAccounts","abi","repo","Contract","contractAddress","newInstanceTx","methods","estimateGas","estimatedGas","from","gas","send","events","deployEventValue","warning","daoAddress","returnValues","dao","error","process","exit","skip","kernel","acl","call","aclAddress","APP_MANAGER_ROLE","appManagerRole","handler","network","kit","kitVersion","run","then","success","domain"],"mappings":"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","sourcesContent":["const TaskList = require('listr')\nconst { ensureWeb3 } = require('../../helpers/web3-fallback')\nconst APM = require('@aragon/apm')\nconst defaultAPMName = require('@aragon/cli-utils/src/helpers/default-apm')\nconst { green, bold } = require('chalk')\nconst { getContract } = require('../../util')\nconst getRepoTask = require('./utils/getRepoTask')\nconst listrOpts = require('@aragon/cli-utils/src/helpers/listr-options')\nconst startIPFS = require('../ipfs_cmds/start')\nconst { getRecommendedGasLimit } = require('../../util')\nconst assignIdTask = require('./id-assign').task\n\nexports.BARE_TEMPLATE = defaultAPMName('bare-template')\nexports.BARE_INSTANCE_FUNCTION = 'newInstance'\nexports.BARE_TEMPLATE_DEPLOY_EVENT = 'DeployDao'\n\nexports.OLD_BARE_TEMPLATE = defaultAPMName('bare-kit')\nexports.OLD_BARE_INSTANCE_FUNCTION = 'newBareInstance'\nexports.OLD_BARE_TEMPLATE_DEPLOY_EVENT = 'DeployInstance'\n\n// TODO: Remove old template once is no longer supported\nconst BARE_TEMPLATE_ABI = require('./utils/bare-template-abi')\nconst OLD_BARE_TEMPLATE_ABI = require('./utils/old-bare-template-abi')\n\nexports.command = 'new [template] [template-version]'\n\nexports.describe = 'Create a new DAO'\n\nexports.builder = yargs => {\n  return yargs\n    .positional('kit', {\n      description: 'Name of the kit to use creating the DAO',\n    })\n    .positional('kit-version', {\n      description: 'Version of the kit to be used',\n    })\n    .positional('template', {\n      description: 'Name of the template to use creating the DAO',\n      default: exports.BARE_TEMPLATE,\n    })\n    .positional('template-version', {\n      description: 'Version of the template to be used',\n      default: 'latest',\n    })\n    .option('fn-args', {\n      description:\n        'Arguments to be passed to the newInstance function (or the function passed with --fn)',\n      array: true,\n      default: [],\n    })\n    .option('fn', {\n      description: 'Function to be called to create instance',\n      default: exports.BARE_INSTANCE_FUNCTION,\n    })\n    .option('deploy-event', {\n      description: 'Event name that the template will fire on success',\n      default: exports.BARE_TEMPLATE_DEPLOY_EVENT,\n    })\n    .option('ipfs-check', {\n      description: 'Whether to have new start IPFS if not started',\n      boolean: true,\n      default: true,\n    })\n    .option('aragon-id', {\n      description: 'Assign an Aragon Id to the DAO',\n      type: 'string',\n    })\n}\n\nexports.task = async ({\n  web3,\n  reporter,\n  gasPrice,\n  apmOptions,\n  template,\n  templateVersion,\n  fn,\n  fnArgs,\n  skipChecks,\n  deployEvent,\n  templateInstance,\n  silent,\n  debug,\n  ipfsCheck,\n  aragonId,\n}) => {\n  apmOptions.ensRegistryAddress = apmOptions['ens-registry']\n  const apm = await APM(web3, apmOptions)\n\n  template = defaultAPMName(template)\n\n  let bareTemplateABI = BARE_TEMPLATE_ABI\n\n  if (template === exports.OLD_BARE_TEMPLATE) {\n    fn = exports.OLD_BARE_INSTANCE_FUNCTION\n    deployEvent = exports.OLD_BARE_TEMPLATE_DEPLOY_EVENT\n    bareTemplateABI = OLD_BARE_TEMPLATE_ABI\n  }\n\n  const tasks = new TaskList(\n    [\n      {\n        // IPFS is a dependency of getRepoTask which uses IPFS to fetch the contract ABI\n        title: 'Check IPFS',\n        task: () => startIPFS.task({ apmOptions }),\n        enabled: () => ipfsCheck,\n      },\n      {\n        title: `Fetching template ${bold(template)}@${templateVersion}`,\n        task: getRepoTask.task({\n          apm,\n          apmRepo: template,\n          apmRepoVersion: templateVersion,\n          artifactRequired: false,\n        }),\n        enabled: () => !templateInstance,\n      },\n      {\n        title: 'Create new DAO from template',\n        task: async (ctx, task) => {\n          if (!ctx.accounts) {\n            ctx.accounts = await web3.eth.getAccounts()\n          }\n          const abi = ctx.repo.abi || bareTemplateABI\n          const template =\n            templateInstance ||\n            new web3.eth.Contract(abi, ctx.repo.contractAddress)\n\n          const newInstanceTx = template.methods[fn](...fnArgs)\n          const estimatedGas = await newInstanceTx.estimateGas()\n          const { events } = await newInstanceTx.send({\n            from: ctx.accounts[0],\n            gas: await getRecommendedGasLimit(web3, estimatedGas),\n            gasPrice,\n          })\n\n          // Backward compatibility with old event name\n          const deployEventValue =\n            events[deployEvent] ||\n            events[exports.OLD_BARE_TEMPLATE_DEPLOY_EVENT]\n\n          // TODO: Include link to documentation\n          if (events[exports.OLD_BARE_TEMPLATE_DEPLOY_EVENT])\n            reporter.warning(\n              `The use of kits was deprecated and templates should be used instead. The 'DeployInstance' event was replaced, 'DeployDao' should be used instead.`\n            )\n\n          if (deployEventValue)\n            ctx.daoAddress = deployEventValue.returnValues.dao\n          else {\n            reporter.error(`Could not find deploy event: ${deployEvent}`)\n            process.exit(1)\n          }\n        },\n      },\n      {\n        title: 'Checking DAO',\n        skip: () => skipChecks,\n        task: async (ctx, task) => {\n          const kernel = new web3.eth.Contract(\n            getContract('@aragon/os', 'Kernel').abi,\n            ctx.daoAddress\n          )\n          ctx.aclAddress = await kernel.methods.acl().call()\n          ctx.appManagerRole = await kernel.methods.APP_MANAGER_ROLE().call()\n        },\n      },\n      {\n        title: 'Assigning Aragon Id',\n        enabled: () => aragonId,\n        task: async ctx => {\n          return assignIdTask({\n            dao: ctx.daoAddress,\n            aragonId,\n            web3,\n            gasPrice,\n            apmOptions,\n            silent,\n            debug,\n            reporter,\n          })\n        },\n      },\n    ],\n    listrOpts(silent, debug)\n  )\n\n  return tasks\n}\n\nexports.handler = async function({\n  reporter,\n  network,\n  kit,\n  kitVersion,\n  template,\n  templateVersion,\n  fn,\n  fnArgs,\n  deployEvent,\n  apm: apmOptions,\n  aragonId,\n  silent,\n  debug,\n}) {\n  const web3 = await ensureWeb3(network)\n\n  // TODO: this can be cleaned up once kits is no longer supported\n  template = kit || template\n  templateVersion = kitVersion || templateVersion\n\n  const task = await exports.task({\n    web3,\n    reporter,\n    network,\n    apmOptions,\n    template,\n    templateVersion,\n    fn,\n    fnArgs,\n    deployEvent,\n    skipChecks: false,\n    aragonId,\n    silent,\n    debug,\n  })\n  return task.run().then(ctx => {\n    if (aragonId) {\n      reporter.success(\n        `Created DAO: ${green(ctx.domain)} at ${green(ctx.daoAddress)}`\n      )\n    } else {\n      reporter.success(`Created DAO: ${green(ctx.daoAddress)}`)\n    }\n    if (kit || kitVersion) {\n      reporter.warning(\n        `The use of kits is deprecated and templates should be used instead. The new options for 'dao new' are '--template' and '--template-version'`\n      )\n    }\n\n    process.exit()\n  })\n}\n"],"file":"new.js"}