{"version":3,"sources":["../../../../src/commands/dao_cmds/utils/encodeInitPayload.js"],"names":["module","exports","web3","abi","initFunctionName","initArgs","methodABI","find","method","name","i","inputs","type","includes","JSON","parse","replace","RegExp","eth","encodeFunctionCall","e","Error","message"],"mappings":";;;;;;;;;;;;;;;;;;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,IAAD,EAAOC,GAAP,EAAYC,gBAAZ,EAA8BC,QAA9B,EAA2C;AAC1D,MAAMC,SAAS,GAAGH,GAAG,CAACI,IAAJ,CAAS,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,IAAP,KAAgBL,gBAApB;AAAA,GAAf,CAAlB;;AAEA,MAAI,CAACE,SAAL,EAAgB;AACd,WAAO,IAAP;AACD,GAFD,MAEO;AACL,QAAI;AACF;AACA,WAAK,IAAII,CAAT,IAAcJ,SAAS,CAACK,MAAxB,EAAgC;AAC9B,YAAIL,SAAS,CAACK,MAAV,CAAiBD,CAAjB,EAAoBE,IAApB,CAAyBC,QAAzB,CAAkC,GAAlC,CAAJ,EAA4C;AAC1CR,UAAAA,QAAQ,CAACK,CAAD,CAAR,GAAcI,IAAI,CAACC,KAAL,CACZV,QAAQ,CAACK,CAAD,CAAR,CAAYM,OAAZ,CAAoB,IAAIC,MAAJ,CAAW,GAAX,EAAgB,GAAhB,CAApB,EAA0C,GAA1C,CADY,CAAd;AAGD;AACF;;AACD,aAAOf,IAAI,CAACgB,GAAL,CAASf,GAAT,CAAagB,kBAAb,CAAgCb,SAAhC,EAA2CD,QAA3C,CAAP;AACD,KAVD,CAUE,OAAOe,CAAP,EAAU;AACV,YAAM,IAAIC,KAAJ,CACJ,sGACED,CAAC,CAACE,OAFA,CAAN;AAID;AACF;AACF,CAvBD","sourcesContent":["module.exports = (web3, abi, initFunctionName, initArgs) => {\n  const methodABI = abi.find(method => method.name === initFunctionName)\n\n  if (!methodABI) {\n    return '0x'\n  } else {\n    try {\n      // parse array parameters from string inputs\n      for (var i in methodABI.inputs) {\n        if (methodABI.inputs[i].type.includes('[')) {\n          initArgs[i] = JSON.parse(\n            initArgs[i].replace(new RegExp(\"'\", 'g'), '\"')\n          )\n        }\n      }\n      return web3.eth.abi.encodeFunctionCall(methodABI, initArgs)\n    } catch (e) {\n      throw new Error(\n        'Invalid initialization params for app. Check the arguments passed with the --app-init-args flag\\n' +\n          e.message\n      )\n    }\n  }\n}\n"],"file":"encodeInitPayload.js"}