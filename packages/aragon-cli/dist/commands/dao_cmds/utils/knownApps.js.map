{"version":3,"sources":["../../../../src/commands/dao_cmds/utils/knownApps.js"],"names":["namehash","require","hash","sha3","keccak256","x","keccak_256","knownAppNames","knownAPMRegistries","listApps","userApps","appNames","reduce","acc","appName","concat","map","apm","appIds","app","Object","assign","module","exports"],"mappings":";;;;;;;;;;;;;;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,kBAAD,CAAP,CAA4BC,IAA7C;;AACA,IAAMC,IAAI,GAAGF,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAAAC,CAAC;AAAA,SAAI,OAAOF,IAAI,CAACG,UAAL,CAAgBD,CAAhB,CAAX;AAAA,CAAnB;;AAEA,IAAME,aAAa,GAAG,CACpB,QADoB,EAEpB,eAFoB,EAGpB,SAHoB,EAIpB,OAJoB,EAKpB,OALoB,EAMpB,QANoB,EAOpB,SAPoB,EAQpB,QARoB,EASpB,KAToB,EAUpB,QAVoB,EAWpB,cAXoB,EAYpB,UAZoB,EAapB,YAboB,CAAtB;AAgBA,IAAMC,kBAAkB,GAAG,CAAC,cAAD,EAAiB,mBAAjB,CAA3B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAmB;AAAA,MAAlBC,QAAkB,uEAAP,EAAO;AAClC,MAAMC,QAAQ,GAAGJ,aAAa,CAC3BK,MADc,CAEb,UAACC,GAAD,EAAMC,OAAN;AAAA,WACED,GAAG,CAACE,MAAJ,CAAWP,kBAAkB,CAACQ,GAAnB,CAAuB,UAAAC,GAAG;AAAA,aAAIH,OAAO,GAAG,GAAV,GAAgBG,GAApB;AAAA,KAA1B,CAAX,CADF;AAAA,GAFa,EAIb,EAJa,EAMdF,MANc,CAMPL,QANO,CAAjB;AAQA,MAAIQ,MAAM,GAAGP,QAAQ,CAACC,MAAT,CACX,UAACC,GAAD,EAAMM,GAAN;AAAA,WAAcC,MAAM,CAACC,MAAP,CAAcR,GAAd,sBAAsBb,QAAQ,CAACmB,GAAD,CAA9B,EAAsCA,GAAtC,EAAd;AAAA,GADW,EAEX,EAFW,CAAb,CATkC,CAalC;AACA;;AACA,SAAOR,QAAQ,CAACC,MAAT,CACL,UAACC,GAAD,EAAMM,GAAN;AAAA,WAAcC,MAAM,CAACC,MAAP,CAAcR,GAAd,sBAAsBT,SAAS,CAACe,GAAD,CAA/B,EAAuCA,GAAvC,EAAd;AAAA,GADK,EAELD,MAFK,CAAP;AAID,CAnBD;;AAqBAI,MAAM,CAACC,OAAP,GAAiB;AAAEd,EAAAA,QAAQ,EAARA;AAAF,CAAjB","sourcesContent":["const namehash = require('eth-ens-namehash').hash\nconst sha3 = require('js-sha3')\n\nconst keccak256 = x => '0x' + sha3.keccak_256(x)\n\nconst knownAppNames = [\n  'voting',\n  'token-manager',\n  'finance',\n  'vault',\n  'agent',\n  'survey',\n  'payroll',\n  'kernel',\n  'acl',\n  'evmreg',\n  'apm-registry',\n  'apm-repo',\n  'apm-enssub',\n]\n\nconst knownAPMRegistries = ['aragonpm.eth', 'open.aragonpm.eth']\n\nconst listApps = (userApps = []) => {\n  const appNames = knownAppNames\n    .reduce(\n      (acc, appName) =>\n        acc.concat(knownAPMRegistries.map(apm => appName + '.' + apm)),\n      []\n    )\n    .concat(userApps)\n\n  let appIds = appNames.reduce(\n    (acc, app) => Object.assign(acc, { [namehash(app)]: app }),\n    {}\n  )\n  // because of a current issue in the deployed apps, we need to calculate with just the keccak too (otherwise acl and evmreg dont show up)\n  // TODO: Fix kernel not showing up\n  return appNames.reduce(\n    (acc, app) => Object.assign(acc, { [keccak256(app)]: app }),\n    appIds\n  )\n}\n\nmodule.exports = { listApps }\n"],"file":"knownApps.js"}