{"version":3,"sources":["../../../src/commands/ipfs_cmds/uninstall.js"],"names":["exports","command","describe","builder","yargs","option","description","runUninstallTask","silent","debug","local","TaskList","title","task","npmBinary","npmArgs","push","logPrefix","join","uninstallProcess","stdout","on","log","output","run","handler","skipConfirmation","reporter","ipfsBinPath","process","cwd","error","exit","info","chalk","blue","newLine","inquirer","prompt","type","name","message","red","confirmation","success"],"mappings":"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","sourcesContent":["import TaskList from 'listr'\nimport execa from 'execa'\nimport chalk from 'chalk'\nimport inquirer from 'inquirer'\n//\nimport listrOpts from '@aragon/cli-utils/src/helpers/listr-options'\nimport {\n  getGlobalBinary,\n  getLocalBinary,\n  getNodePackageManager,\n} from '../../util'\n\nexports.command = 'uninstall'\nexports.describe = 'Uninstall the go-ipfs binaries.'\n\nexports.builder = yargs => {\n  return yargs\n    .option('local', {\n      description: 'Whether to uninstall IPFS from the project dependencies',\n      boolean: true,\n      default: false,\n    })\n    .option('skip-confirmation', {\n      description: 'Whether to skip the confirmation step',\n      boolean: true,\n      default: false,\n    })\n}\n\nconst runUninstallTask = ({ silent, debug, local }) => {\n  return new TaskList(\n    [\n      {\n        title: 'Uninstall IPFS',\n        task: async task => {\n          const npmBinary = getNodePackageManager()\n          const npmArgs = ['uninstall', 'go-ipfs']\n          if (!local) {\n            npmArgs.push('--global')\n          }\n\n          const logPrefix = `npm ${npmArgs.join(' ')}:`\n          const uninstallProcess = execa(npmBinary, npmArgs)\n\n          uninstallProcess.stdout.on('data', log => {\n            if (log) task.output = `${logPrefix} ${log}`\n          })\n\n          await uninstallProcess\n        },\n      },\n    ],\n    listrOpts(silent, debug)\n  ).run()\n}\n\nexports.handler = async function({\n  debug,\n  silent,\n  skipConfirmation,\n  local,\n  reporter,\n}) {\n  /**\n   * Check if it's installed\n   */\n  const ipfsBinPath = local\n    ? getLocalBinary('ipfs', process.cwd())\n    : getGlobalBinary('ipfs')\n\n  if (!ipfsBinPath) {\n    reporter.error('IPFS is not installed')\n    return process.exit(1)\n  }\n  /**\n   * Print confirmation details\n   */\n  reporter.info(`Location: ${chalk.blue(ipfsBinPath)}`)\n\n  /**\n   * Confirm & uninstall\n   */\n  reporter.newLine()\n  if (!skipConfirmation) {\n    const { confirmation } = await inquirer.prompt([\n      {\n        type: 'confirm',\n        name: 'confirmation',\n        default: false,\n        message: `Are you sure you want to ${chalk.red('uninstall IPFS')}?`,\n      },\n    ])\n    if (!confirmation) return\n  }\n\n  await runUninstallTask({\n    silent,\n    debug,\n    local,\n  })\n\n  reporter.newLine()\n  reporter.success('Success!')\n}\n"],"file":"uninstall.js"}