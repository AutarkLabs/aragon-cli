{"version":3,"sources":["../../src/helpers/web3-fallback.js"],"names":["Web3","require","ensureWeb3","network","web3","provider","eth","net","isListening","connected","Error","module","exports"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAMC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIfC,YAAAA,IAAI,GAAG,IAAIJ,IAAJ,CAASG,OAAO,CAACE,QAAjB,CAAP;AAJe;AAAA,mBAKSD,IAAI,CAACE,GAAL,CAASC,GAAT,CAAaC,WAAb,EALT;;AAAA;AAKTC,YAAAA,SALS;;AAAA,iBAMXA,SANW;AAAA;AAAA;AAAA;;AAAA,6CAMOL,IANP;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,kBAQT,IAAIM,KAAJ,yRARS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVR,UAAU;AAAA;AAAA;AAAA,GAAhB;;AAgBAS,MAAM,CAACC,OAAP,GAAiB;AAAEV,EAAAA,UAAU,EAAVA;AAAF,CAAjB","sourcesContent":["const Web3 = require('web3')\n\nconst ensureWeb3 = async network => {\n  let web3\n\n  try {\n    web3 = new Web3(network.provider)\n    const connected = await web3.eth.net.isListening()\n    if (connected) return web3\n  } catch (err) {\n    throw new Error(`Web3 cannot connect using the network provider.\n\nMake sure 'aragon devchain' is running or your provider settings are correct.\n\nFor more info you can check the Truffle docs on network configuration: https://truffleframework.com/docs/truffle/reference/configuration#networks`)\n  }\n}\n\nmodule.exports = { ensureWeb3 }\n"],"file":"web3-fallback.js"}