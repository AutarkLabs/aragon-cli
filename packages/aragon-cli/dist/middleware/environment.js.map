{"version":3,"sources":["../../src/middleware/environment.js"],"names":["Web3","require","merge","getTruffleConfig","FRAME_ENDPOINT","FRAME_ORIGIN","ARAGON_RINKEBY_ENDPOINT","ARAGON_MAINNET_ENDPOINT","configureNetwork","argv","network","truffleConfig","skipNetworkSubcommands","Set","_","length","has","skipNetworkCommands","useFrame","providerOptions","headers","origin","name","provider","providers","WebsocketProvider","truffleNetwork","networks","Error","host","port","HttpProvider","module","exports","environmentMiddleware","runsInCwd","reporter","environment","apm","isTruffleFwd","error","process","exit","environments","env","response","Object","assign","appName","registry","apmEnsRegistry","wsRPC","wsProvider","defaultEnvironments","defaultNetworks","debug"],"mappings":"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","sourcesContent":["const Web3 = require('web3')\nconst merge = require('lodash.merge')\nconst { getTruffleConfig } = require('../helpers/truffle-config')\n\nconst FRAME_ENDPOINT = 'ws://localhost:1248'\nconst FRAME_ORIGIN = 'aragonCLI'\n\nconst ARAGON_RINKEBY_ENDPOINT = 'wss://rinkeby.eth.aragon.network/ws'\nconst ARAGON_MAINNET_ENDPOINT = 'wss://mainnet.eth.aragon.network/ws'\n\nconst configureNetwork = (\n  argv,\n  network,\n  truffleConfig = getTruffleConfig()\n) => {\n  // Catch commands that dont require network and return\n  const skipNetworkSubcommands = new Set(['version']) // 'aragon apm version'\n  if (argv._.length >= 2) {\n    if (skipNetworkSubcommands.has(argv._[1])) {\n      return {}\n    }\n  }\n  // TODO remove init when commmand not longer supported\n  const skipNetworkCommands = new Set(['init', 'devchain', 'ipfs', 'contracts'])\n\n  if (argv._.length >= 1) {\n    if (skipNetworkCommands.has(argv._[0])) {\n      return {}\n    }\n  }\n\n  if (argv.useFrame) {\n    const providerOptions = {\n      headers: {\n        origin: FRAME_ORIGIN,\n      },\n    }\n    return {\n      name: `frame-${network}`,\n      provider: new Web3.providers.WebsocketProvider(\n        FRAME_ENDPOINT,\n        providerOptions\n      ),\n    }\n  }\n\n  const truffleNetwork = truffleConfig.networks[network]\n  if (!truffleNetwork) {\n    throw new Error(\n      `aragon <command> requires a network '${network}' in your truffle.js. For an example, see http://truffleframework.com/docs/advanced/configuration`\n    )\n  }\n  let provider\n  if (truffleNetwork.provider) {\n    if (typeof truffleNetwork.provider === 'function') {\n      provider = truffleNetwork.provider()\n    } else {\n      provider = truffleNetwork.provider\n    }\n  } else if (truffleNetwork.host && truffleNetwork.port) {\n    provider = new Web3.providers.WebsocketProvider(\n      `ws://${truffleNetwork.host}:${truffleNetwork.port}`\n    )\n  } else {\n    provider = new Web3.providers.HttpProvider(`http://localhost:8545`)\n  }\n  truffleNetwork.provider = provider\n  truffleNetwork.name = network\n\n  return truffleNetwork\n}\n\n// TODO this can be cleaned up once --network is no longer supported\nmodule.exports = function environmentMiddleware(argv) {\n  const runsInCwd = argv._[0] === 'init'\n  const { reporter, module } = argv\n  let { environment, network, apm } = argv\n\n  const isTruffleFwd = argv._[0] === 'contracts'\n\n  if (environment && network && !isTruffleFwd) {\n    reporter.error(\n      \"Arguments '--network' and '--environment' are mutually exclusive. Using '--network'  has been deprecated and  '--environment' should be used instead.\"\n    )\n    process.exit(1)\n  }\n\n  if (!runsInCwd && module) {\n    if (network && module.environments && !isTruffleFwd) {\n      reporter.error(\n        \"Your arapp.json contains an `environments` property. The use of '--network' is deprecated and '--environment' should be used instead.\"\n      )\n      process.exit(1)\n    }\n    if (!module.environments) {\n      if (environment) {\n        reporter.error(\n          \"Your arapp.json does not contain an `environments` property. The use of '--environment'  is not supported.\"\n        )\n        process.exit(1)\n      }\n      if (!network) network = 'development'\n      return { network: configureNetwork(argv, network) }\n    }\n\n    if (!environment) environment = 'default'\n\n    const env = module.environments[environment]\n\n    if (!env) {\n      reporter.error(\n        `${environment} environment was not defined in your arapp.json.`\n      )\n      process.exit(1)\n    }\n\n    // only include the selected environment in the module\n    module.environments = {\n      [environment]: env,\n    }\n\n    const response = {\n      module: Object.assign({}, module, { appName: env.appName }),\n      network: configureNetwork(argv, env.network),\n    }\n\n    // Override apm options that we find in the environment\n    // TODO (daniel) : it should be the other way around though (cli params to override env)\n    if (apm) {\n      if (env.registry) {\n        apm['ens-registry'] = env.registry\n      }\n      if (env.apm) {\n        apm = merge(apm, env.apm)\n      }\n    }\n\n    if (env.registry) {\n      // TODO (daniel) : remove this as it does not seem to be used\n      response.apmEnsRegistry = env.registry\n    }\n\n    if (env.wsRPC) {\n      response.wsProvider = new Web3.providers.WebsocketProvider(env.wsRPC)\n    } else {\n      if (env.network === 'rinkeby')\n        response.wsProvider = new Web3.providers.WebsocketProvider(\n          ARAGON_RINKEBY_ENDPOINT\n        )\n      if (env.network === 'mainnet')\n        response.wsProvider = new Web3.providers.WebsocketProvider(\n          ARAGON_MAINNET_ENDPOINT\n        )\n    }\n\n    return response\n  }\n\n  // if there is no arapp.json and the command is not init default to the \"global\" config\n  // designed for the dao commands including dao acl\n  if (!module && !runsInCwd) {\n    const defaultEnvironments = require('../../config/environments.default')\n    const defaultNetworks = require('../../config/truffle.default')\n\n    let { environment, apm } = argv\n    const env = defaultEnvironments[environment || 'aragon:local']\n\n    if (environment && !env) {\n      reporter.error(\n        `Could not find the ${environment} environment. Try using aragon:local, aragon:rinkeby or aragon:mainnet.`\n      )\n      process.exit(1)\n    }\n\n    reporter.debug(\n      `Could not find 'arapp.json'. Using the default configuration to connect to ${env.network}.`\n    )\n\n    // Override apm options that we find in the environment\n    // TODO (daniel) : it should be the other way around though (cli params to override env)\n    if (apm) {\n      if (env.registry) {\n        apm['ens-registry'] = env.registry\n      }\n      if (env.apm) {\n        apm = merge(apm, env.apm)\n      }\n    }\n\n    return {\n      // TODO (daniel) : remove this as it does not seem to be used\n      apmEnsRegistry: env.registry,\n      network: configureNetwork(argv, env.network, defaultNetworks),\n      wsProvider: env.wsRPC && new Web3.providers.WebsocketProvider(env.wsRPC),\n    }\n  }\n\n  return {}\n}\n"],"file":"environment.js"}