{"version":3,"sources":["../src/cli.js"],"names":["ConsoleReporter","require","cmd","parserConfiguration","commandDir","visit","alias","demandCommand","option","description","coerce","debug","process","env","DEBUG","global","DEBUG_MODE","epilogue","reporter","JSON","stringify","argv","fail","msg","err","yargs","error","message","showHelp","stack","exit","parse","slice"],"mappings":"AAAA;;;;;AACA;;AACA;;AACA,IAAMA,eAAe,GAAGC,OAAO,CAAC,6BAAD,CAA/B,C,CAEA;;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,OAAD,CAAP,CACTE,mBADS,CACW;AACnB,mBAAiB;AADE,CADX,EAITC,UAJS,CAIE,YAJF,EAIgB;AACxBC,EAAAA,KAAK,EAAE,eAAAH,GAAG,EAAI;AACZ,WAAOA,GAAP;AACD;AAHuB,CAJhB,CAAZ,C,CAQK;;;AAELA,GAAG,CAACI,KAAJ,CAAU,GAAV,EAAe,MAAf;AACAJ,GAAG,CAACI,KAAJ,CAAU,GAAV,EAAe,SAAf,E,CAEA;;AACAJ,GAAG,CAACK,aAAJ,CAAkB,CAAlB,EAAqB,+BAArB,E,CAEA;;AACAL,GAAG,CAACM,MAAJ,CAAW,QAAX,EAAqB;AACnBC,EAAAA,WAAW,EAAE,4BADM;AAEnB,aAAS,IAFU;AAGnB,aAAS;AAHU,CAArB;AAMAP,GAAG,CAACM,MAAJ,CAAW,OAAX,EAAoB;AAClBC,EAAAA,WAAW,EAAE,8BADK;AAElB,aAAS,IAFS;AAGlB,aAAS,KAHS;AAIlBC,EAAAA,MAAM,EAAE,gBAAAC,KAAK,EAAI;AACf,QAAIA,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYC,KAAzB,EAAgC;AAC9BC,MAAAA,MAAM,CAACC,UAAP,GAAoB,IAApB;AACA,aAAO,IAAP;AACD;AACF;AATiB,CAApB,E,CAYA;;AACAd,GAAG,CAACe,QAAJ,CAAa,yDAAb,E,CAEA;;AACA,IAAMC,QAAQ,GAAG,IAAIlB,eAAJ,EAAjB;AACAkB,QAAQ,CAACP,KAAT,CAAeQ,IAAI,CAACC,SAAL,CAAeR,OAAO,CAACS,IAAvB,CAAf;AACAnB,GAAG,CACAoB,IADH,CACQ,UAACC,GAAD,EAAMC,GAAN,EAAWC,KAAX,EAAqB;AACzBP,EAAAA,QAAQ,CAACQ,KAAT,CAAeH,GAAG,IAAIC,GAAG,CAACG,OAAX,IAAsB,mBAArC;;AAEA,MAAI,CAACH,GAAL,EAAU;AACRC,IAAAA,KAAK,CAACG,QAAN;AACD,GAFD,MAEO,IAAIJ,GAAG,CAACK,KAAR,EAAe;AACpBX,IAAAA,QAAQ,CAACP,KAAT,CAAea,GAAG,CAACK,KAAnB;AACD;;AAEDjB,EAAAA,OAAO,CAACkB,IAAR,CAAa,CAAb;AACD,CAXH,EAYGC,KAZH,CAYSnB,OAAO,CAACS,IAAR,CAAaW,KAAb,CAAmB,CAAnB,CAZT,EAYgC;AAC5Bd,EAAAA,QAAQ,EAARA;AAD4B,CAZhC","sourcesContent":["#!/usr/bin/env node\nimport 'core-js/stable'\nimport 'regenerator-runtime/runtime'\nconst ConsoleReporter = require('./reporters/ConsoleReporter')\n\n// Set up commands\nconst cmd = require('yargs')\n  .parserConfiguration({\n    'parse-numbers': false,\n  })\n  .commandDir('./commands', {\n    visit: cmd => {\n      return cmd\n    },\n  }) // .strict()\n\ncmd.alias('h', 'help')\ncmd.alias('v', 'version')\n\n// Configure CLI behaviour\ncmd.demandCommand(1, 'You need to specify a command')\n\n// Set global options\ncmd.option('silent', {\n  description: 'Silence output to terminal',\n  boolean: true,\n  default: false,\n})\n\ncmd.option('debug', {\n  description: 'Show more output to terminal',\n  boolean: true,\n  default: false,\n  coerce: debug => {\n    if (debug || process.env.DEBUG) {\n      global.DEBUG_MODE = true\n      return true\n    }\n  },\n})\n\n// Add epilogue\ncmd.epilogue('For more information, check out https://hack.aragon.org')\n\n// Run\nconst reporter = new ConsoleReporter()\nreporter.debug(JSON.stringify(process.argv))\ncmd\n  .fail((msg, err, yargs) => {\n    reporter.error(msg || err.message || 'An error occurred')\n\n    if (!err) {\n      yargs.showHelp()\n    } else if (err.stack) {\n      reporter.debug(err.stack)\n    }\n\n    process.exit(1)\n  })\n  .parse(process.argv.slice(2), {\n    reporter,\n  })\n"],"file":"cli.js"}