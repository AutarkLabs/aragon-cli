{"version":3,"sources":["../../src/commands/create-aragon-app.js"],"names":["require","promisify","clone","TaskList","installDeps","isValidAragonId","defaultAPMName","listrOpts","execa","exports","command","describe","builder","yargs","positional","description","option","process","cwd","coerce","resolveTemplateName","tmpl","aliases","bare","react","tutorial","includes","Error","handler","reporter","name","template","silent","debug","basename","split","tasks","title","task","ctx","output","error","shallow","enabled","ipfsMissing","run","then","success"],"mappings":"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","sourcesContent":["import { checkProjectExists, prepareTemplate } from '../lib'\nconst { promisify } = require('util')\nconst clone = promisify(require('git-clone'))\nconst TaskList = require('listr')\nconst { installDeps, isValidAragonId } = require('../util')\nconst defaultAPMName = require('../helpers/default-apm')\nconst listrOpts = require('../helpers/listr-options')\nconst execa = require('execa')\n\nexports.command = '* <name> [template]'\n\nexports.describe = 'Create a new aragon application'\n\nexports.builder = yargs => {\n  return yargs\n    .positional('name', {\n      description: 'The application name (appname.aragonpm.eth)',\n    })\n    .option('cwd', {\n      description: 'The current working directory',\n      default: process.cwd(),\n    })\n    .positional('template', {\n      description: 'The template to scaffold from',\n      default: 'react',\n      coerce: function resolveTemplateName(tmpl) {\n        const aliases = {\n          bare: 'aragon/aragon-bare-boilerplate',\n          react: 'aragon/aragon-react-boilerplate',\n          tutorial: 'aragon/your-first-aragon-app',\n        }\n\n        if (!tmpl.includes('/')) {\n          if (tmpl === 'react-kit') {\n            throw new Error(\n              `The 'react-kit' boilerplate has been deprecated and merged with 'react' boilerplate.`\n            )\n          } else if (!aliases[tmpl]) {\n            throw new Error(`No template named ${tmpl} exists`)\n          }\n          tmpl = aliases[tmpl]\n        }\n\n        return `https://github.com/${tmpl}`\n      },\n    })\n}\n\nexports.handler = function({ reporter, name, template, silent, debug }) {\n  name = defaultAPMName(name)\n  const basename = name.split('.')[0]\n\n  const tasks = new TaskList(\n    [\n      {\n        title: 'Preparing initialization',\n        task: async (ctx, task) => {\n          task.output = 'Checking if project folder already exists...'\n          if (!isValidAragonId(basename)) {\n            throw new Error(\n              reporter.error(\n                'Invalid project name. Please only use lowercase alphanumeric and hyphen characters.'\n              )\n            )\n          }\n\n          await checkProjectExists(basename)\n        },\n      },\n      {\n        title: 'Cloning app template',\n        task: async (ctx, task) => {\n          task.output = `Cloning ${template} into ${basename}...`\n          await clone(template, basename, { shallow: true })\n        },\n      },\n      {\n        title: 'Preparing template',\n        task: async (ctx, task) => {\n          task.output = 'Initiliazing arapp.json and removing Git repository'\n          await prepareTemplate(basename, name)\n        },\n        enabled: () => !template.includes('your-first-aragon-app'),\n      },\n      {\n        title: 'Installing package dependencies',\n        task: async (ctx, task) => installDeps(basename, task),\n      },\n      {\n        title: 'Check IPFS',\n        task: async (ctx, task) => {\n          try {\n            ctx.ipfsMissing = false\n            await execa('ipfs', ['version'])\n          } catch {\n            ctx.ipfsMissing = true\n          }\n        },\n      },\n      {\n        title: 'Installing IPFS',\n        enabled: ctx => ctx.ipfsMissing,\n        task: async (ctx, task) => {\n          await execa('npx', [\n            'aragon',\n            'ipfs',\n            'install',\n            '--skip-confirmation',\n          ])\n        },\n      },\n    ],\n    listrOpts(silent, debug)\n  )\n\n  return tasks.run().then(() => {\n    reporter.success(`Created new application ${name} in ${basename}.`)\n  })\n}\n"],"file":"create-aragon-app.js"}