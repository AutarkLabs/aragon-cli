{"version":3,"sources":["../../src/lib/prepare-template.js"],"names":["prepareTemplate","dir","appName","gitFolderPath","path","resolve","licensePath","packageJsonPath","fs","readJson","packageJson","license","writeJson","spaces","defaultRegistries","forEach","registry","regex","replacement","paths","recursive","silent","Promise","all","remove"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEA;;;;;;;;SAQsBA,e;;;;;;;0BAAf,iBAA+BC,GAA/B,EAAoCC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AACL;;;AAGMC,YAAAA,aAJD,GAIiBC,iBAAKC,OAAL,CAAaJ,GAAb,EAAkB,MAAlB,CAJjB;AAML;;;;AAGMK,YAAAA,WATD,GASeF,iBAAKC,OAAL,CAAaJ,GAAb,EAAkB,SAAlB,CATf;AAUCM,YAAAA,eAVD,GAUmBH,iBAAKC,OAAL,CAAaJ,GAAb,EAAkB,cAAlB,CAVnB;AAAA;AAAA,mBAWqBO,oBAAGC,QAAH,CAAYF,eAAZ,CAXrB;;AAAA;AAWCG,YAAAA,WAXD;AAYL,mBAAOA,WAAW,CAACC,OAAnB;AAZK;AAAA,mBAaCH,oBAAGI,SAAH,CAAaL,eAAb,EAA8BG,WAA9B,EAA2C;AAAEG,cAAAA,MAAM,EAAE;AAAV,aAA3C,CAbD;;AAAA;AAkBCC,YAAAA,iBAlBD,GAkBqB,CACxB;AACA,+CAFwB,CAGxB;AAHwB,aAlBrB;AAwBLA,YAAAA,iBAAiB,CAACC,OAAlB,CAA0B,UAAAC,QAAQ,EAAI;AACpC,uCAAQ;AACNC,gBAAAA,KAAK,EAAED,QADD;AAENE,gBAAAA,WAAW,EAAEhB,OAFP;AAGNiB,gBAAAA,KAAK,EAAE,CAAClB,GAAD,CAHD;AAINmB,gBAAAA,SAAS,EAAE,IAJL;AAKNC,gBAAAA,MAAM,EAAE;AALF,eAAR;AAOD,aARD;AAUA;;;;AAGA,qCAAQ;AACNJ,cAAAA,KAAK,EAAE,sBADD;AAENC,cAAAA,WAAW,EAAEjB,GAFP;AAGNkB,cAAAA,KAAK,EAAE,CAAClB,GAAD,CAHD;AAINmB,cAAAA,SAAS,EAAE,IAJL;AAKNC,cAAAA,MAAM,EAAE;AALF,aAAR;AArCK,6CA6CEC,OAAO,CAACC,GAAR,CAAY,CAACf,oBAAGgB,MAAH,CAAUrB,aAAV,CAAD,EAA2BK,oBAAGgB,MAAH,CAAUlB,WAAV,CAA3B,CAAZ,CA7CF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import path from 'path'\nimport fs from 'fs-extra'\nimport replace from 'replace'\n\n/**\n * Remove the `.git` dir, licenses and rename the app name and registry.\n * (It will search and replace anything that matches `placeholder-app-name`)\n *\n * @param {string} dir - for example `foo`\n * @param {string} appName - for example `foo.myApmRegistry.eth`\n * @returns {void}\n */\nexport async function prepareTemplate(dir, appName) {\n  /**\n   * Delete .git\n   */\n  const gitFolderPath = path.resolve(dir, '.git')\n\n  /**\n   * Delete licenses\n   */\n  const licensePath = path.resolve(dir, 'LICENSE')\n  const packageJsonPath = path.resolve(dir, 'package.json')\n  const packageJson = await fs.readJson(packageJsonPath)\n  delete packageJson.license\n  await fs.writeJson(packageJsonPath, packageJson, { spaces: 2 })\n\n  /**\n   * Replace the default registries with the preferred one\n   */\n  const defaultRegistries = [\n    // To keep backwards compability, only change `aragonpm.eth`, leave `open.aragonpm.eth`\n    'placeholder-app-name.aragonpm.eth',\n    // 'placeholder-app-name.open.aragonpm.eth',\n  ]\n\n  defaultRegistries.forEach(registry => {\n    replace({\n      regex: registry,\n      replacement: appName,\n      paths: [dir],\n      recursive: true,\n      silent: true,\n    })\n  })\n\n  /**\n   * Replace the placeholder name with the actual name\n   */\n  replace({\n    regex: 'placeholder-app-name',\n    replacement: dir,\n    paths: [dir],\n    recursive: true,\n    silent: true,\n  })\n\n  return Promise.all([fs.remove(gitFolderPath), fs.remove(licensePath)])\n}\n"],"file":"prepare-template.js"}